// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package slices

type OfBool []bool

func (__ OfBool) At(i int) bool {
	return __[i]
}

func (__ OfBool) Count() int {
	return len(__)
}

type OfByte []byte

func (__ OfByte) At(i int) byte {
	return __[i]
}

func (__ OfByte) Count() int {
	return len(__)
}

type OfComplex128 []complex128

func (__ OfComplex128) At(i int) complex128 {
	return __[i]
}

func (__ OfComplex128) Count() int {
	return len(__)
}

type OfComplex64 []complex64

func (__ OfComplex64) At(i int) complex64 {
	return __[i]
}

func (__ OfComplex64) Count() int {
	return len(__)
}

type OfError []error

func (__ OfError) At(i int) error {
	return __[i]
}

func (__ OfError) Count() int {
	return len(__)
}

type OfFloat32 []float32

func (__ OfFloat32) At(i int) float32 {
	return __[i]
}

func (__ OfFloat32) Count() int {
	return len(__)
}

type OfFloat64 []float64

func (__ OfFloat64) At(i int) float64 {
	return __[i]
}

func (__ OfFloat64) Count() int {
	return len(__)
}

type OfInt []int

func (__ OfInt) At(i int) int {
	return __[i]
}

func (__ OfInt) Count() int {
	return len(__)
}

type OfInt16 []int16

func (__ OfInt16) At(i int) int16 {
	return __[i]
}

func (__ OfInt16) Count() int {
	return len(__)
}

type OfInt32 []int32

func (__ OfInt32) At(i int) int32 {
	return __[i]
}

func (__ OfInt32) Count() int {
	return len(__)
}

type OfInt64 []int64

func (__ OfInt64) At(i int) int64 {
	return __[i]
}

func (__ OfInt64) Count() int {
	return len(__)
}

type OfInt8 []int8

func (__ OfInt8) At(i int) int8 {
	return __[i]
}

func (__ OfInt8) Count() int {
	return len(__)
}

type OfRune []rune

func (__ OfRune) At(i int) rune {
	return __[i]
}

func (__ OfRune) Count() int {
	return len(__)
}

type OfString []string

func (__ OfString) At(i int) string {
	return __[i]
}

func (__ OfString) Count() int {
	return len(__)
}

type OfUint []uint

func (__ OfUint) At(i int) uint {
	return __[i]
}

func (__ OfUint) Count() int {
	return len(__)
}

type OfUint16 []uint16

func (__ OfUint16) At(i int) uint16 {
	return __[i]
}

func (__ OfUint16) Count() int {
	return len(__)
}

type OfUint32 []uint32

func (__ OfUint32) At(i int) uint32 {
	return __[i]
}

func (__ OfUint32) Count() int {
	return len(__)
}

type OfUint64 []uint64

func (__ OfUint64) At(i int) uint64 {
	return __[i]
}

func (__ OfUint64) Count() int {
	return len(__)
}

type OfUint8 []uint8

func (__ OfUint8) At(i int) uint8 {
	return __[i]
}

func (__ OfUint8) Count() int {
	return len(__)
}

type OfUintptr []uintptr

func (__ OfUintptr) At(i int) uintptr {
	return __[i]
}

func (__ OfUintptr) Count() int {
	return len(__)
}
